// Code generated by aliensboot. DO NOT EDIT.
// source: module defaultmodule
package rpc

import (
	"github.com/KylinHe/aliensboot-server/protocol"
	"github.com/KylinHe/aliensboot-core/cluster/center"
)

var Defaultmodule = &defaultmoduleRPCHandler{&rpcHandler{name:"defaultmodule"}}


type defaultmoduleRPCHandler struct {
	*rpcHandler
}

func (this *defaultmoduleRPCHandler) GetLbsNode(param string) string {
	service := center.ClusterCenter.AllocService(this.name, param)
	if service == nil {
		return ""
	}
	return service.GetID()
}


func (this *defaultmoduleRPCHandler) Benchmark(node string, request *protocol.Benchmark) *protocol.BenchmarkRet {
	message := &protocol.Request{
		Defaultmodule:&protocol.Request_Benchmark{
			Benchmark:request,
		},
	}
	messageRet, _ := this.Request(node, message)
	return messageRet.GetBenchmarkRet()
}


func (this *defaultmoduleRPCHandler) BenchmarkAuth(authId int64, hashKey string, request *protocol.Benchmark) (*protocol.BenchmarkRet, error) {
	message := &protocol.Request{
		Defaultmodule:&protocol.Request_Benchmark{
			Benchmark:request,
		},
	}
	messageRet, err := this.AuthRequest(authId, hashKey, message)
	return messageRet.GetBenchmarkRet(), err
}


func (this *defaultmoduleRPCHandler) BenchmarkAuthNode(authId int64, node string, request *protocol.Benchmark) (*protocol.BenchmarkRet, error) {
	message := &protocol.Request{
		Defaultmodule:&protocol.Request_Benchmark{
			Benchmark:request,
		},
	}
	messageRet, err := this.AuthNodeRequest(authId, node, message)
	return messageRet.GetBenchmarkRet(), err
}



