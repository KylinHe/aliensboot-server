// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protocol.proto

package protocol

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// request
type Request struct {
	Session int32 `protobuf:"varint,1,opt,name=session,proto3" json:"session,omitempty"`
	// ----------------网关模块接口-----------
	//
	// Types that are valid to be assigned to Gate:
	//	*Request_HealthCheck
	//	*Request_BindService
	//	*Request_KickOut
	//	*Request_PushMessage
	//	*Request_GetAuthNode
	Gate isRequest_Gate `protobuf_oneof:"gate"`
	// Types that are valid to be assigned to Passport:
	//	*Request_UserRegister
	//	*Request_UserLogin
	//	*Request_TokenLogin
	//	*Request_ModifyUserStatus
	//	*Request_GetUser
	//	*Request_UserReset
	Passport isRequest_Passport `protobuf_oneof:"passport"`
	// Types that are valid to be assigned to Defaultmodule:
	//	*Request_Benchmark
	Defaultmodule isRequest_Defaultmodule `protobuf_oneof:"defaultmodule"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptorProtocol, []int{0} }

type isRequest_Gate interface {
	isRequest_Gate()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isRequest_Passport interface {
	isRequest_Passport()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isRequest_Defaultmodule interface {
	isRequest_Defaultmodule()
	MarshalTo([]byte) (int, error)
	Size() int
}

type Request_HealthCheck struct {
	HealthCheck *HealthCheck `protobuf:"bytes,5,opt,name=healthCheck,oneof"`
}
type Request_BindService struct {
	BindService *BindService `protobuf:"bytes,9,opt,name=bindService,oneof"`
}
type Request_KickOut struct {
	KickOut *KickOut `protobuf:"bytes,10,opt,name=kickOut,oneof"`
}
type Request_PushMessage struct {
	PushMessage *PushMessage `protobuf:"bytes,11,opt,name=pushMessage,oneof"`
}
type Request_GetAuthNode struct {
	GetAuthNode *GetAuthNode `protobuf:"bytes,13,opt,name=getAuthNode,oneof"`
}
type Request_UserRegister struct {
	UserRegister *UserRegister `protobuf:"bytes,20,opt,name=userRegister,oneof"`
}
type Request_UserLogin struct {
	UserLogin *UserLogin `protobuf:"bytes,21,opt,name=userLogin,oneof"`
}
type Request_TokenLogin struct {
	TokenLogin *TokenLogin `protobuf:"bytes,22,opt,name=tokenLogin,oneof"`
}
type Request_ModifyUserStatus struct {
	ModifyUserStatus *ModifyUserStatus `protobuf:"bytes,23,opt,name=modifyUserStatus,oneof"`
}
type Request_GetUser struct {
	GetUser *GetUser `protobuf:"bytes,24,opt,name=getUser,oneof"`
}
type Request_UserReset struct {
	UserReset *UserReset `protobuf:"bytes,25,opt,name=userReset,oneof"`
}
type Request_Benchmark struct {
	Benchmark *Benchmark `protobuf:"bytes,30,opt,name=benchmark,oneof"`
}

func (*Request_HealthCheck) isRequest_Gate()          {}
func (*Request_BindService) isRequest_Gate()          {}
func (*Request_KickOut) isRequest_Gate()              {}
func (*Request_PushMessage) isRequest_Gate()          {}
func (*Request_GetAuthNode) isRequest_Gate()          {}
func (*Request_UserRegister) isRequest_Passport()     {}
func (*Request_UserLogin) isRequest_Passport()        {}
func (*Request_TokenLogin) isRequest_Passport()       {}
func (*Request_ModifyUserStatus) isRequest_Passport() {}
func (*Request_GetUser) isRequest_Passport()          {}
func (*Request_UserReset) isRequest_Passport()        {}
func (*Request_Benchmark) isRequest_Defaultmodule()   {}

func (m *Request) GetGate() isRequest_Gate {
	if m != nil {
		return m.Gate
	}
	return nil
}
func (m *Request) GetPassport() isRequest_Passport {
	if m != nil {
		return m.Passport
	}
	return nil
}
func (m *Request) GetDefaultmodule() isRequest_Defaultmodule {
	if m != nil {
		return m.Defaultmodule
	}
	return nil
}

func (m *Request) GetSession() int32 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *Request) GetHealthCheck() *HealthCheck {
	if x, ok := m.GetGate().(*Request_HealthCheck); ok {
		return x.HealthCheck
	}
	return nil
}

func (m *Request) GetBindService() *BindService {
	if x, ok := m.GetGate().(*Request_BindService); ok {
		return x.BindService
	}
	return nil
}

func (m *Request) GetKickOut() *KickOut {
	if x, ok := m.GetGate().(*Request_KickOut); ok {
		return x.KickOut
	}
	return nil
}

func (m *Request) GetPushMessage() *PushMessage {
	if x, ok := m.GetGate().(*Request_PushMessage); ok {
		return x.PushMessage
	}
	return nil
}

func (m *Request) GetGetAuthNode() *GetAuthNode {
	if x, ok := m.GetGate().(*Request_GetAuthNode); ok {
		return x.GetAuthNode
	}
	return nil
}

func (m *Request) GetUserRegister() *UserRegister {
	if x, ok := m.GetPassport().(*Request_UserRegister); ok {
		return x.UserRegister
	}
	return nil
}

func (m *Request) GetUserLogin() *UserLogin {
	if x, ok := m.GetPassport().(*Request_UserLogin); ok {
		return x.UserLogin
	}
	return nil
}

func (m *Request) GetTokenLogin() *TokenLogin {
	if x, ok := m.GetPassport().(*Request_TokenLogin); ok {
		return x.TokenLogin
	}
	return nil
}

func (m *Request) GetModifyUserStatus() *ModifyUserStatus {
	if x, ok := m.GetPassport().(*Request_ModifyUserStatus); ok {
		return x.ModifyUserStatus
	}
	return nil
}

func (m *Request) GetGetUser() *GetUser {
	if x, ok := m.GetPassport().(*Request_GetUser); ok {
		return x.GetUser
	}
	return nil
}

func (m *Request) GetUserReset() *UserReset {
	if x, ok := m.GetPassport().(*Request_UserReset); ok {
		return x.UserReset
	}
	return nil
}

func (m *Request) GetBenchmark() *Benchmark {
	if x, ok := m.GetDefaultmodule().(*Request_Benchmark); ok {
		return x.Benchmark
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_HealthCheck)(nil),
		(*Request_BindService)(nil),
		(*Request_KickOut)(nil),
		(*Request_PushMessage)(nil),
		(*Request_GetAuthNode)(nil),
		(*Request_UserRegister)(nil),
		(*Request_UserLogin)(nil),
		(*Request_TokenLogin)(nil),
		(*Request_ModifyUserStatus)(nil),
		(*Request_GetUser)(nil),
		(*Request_UserReset)(nil),
		(*Request_Benchmark)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// gate
	switch x := m.Gate.(type) {
	case *Request_HealthCheck:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HealthCheck); err != nil {
			return err
		}
	case *Request_BindService:
		_ = b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BindService); err != nil {
			return err
		}
	case *Request_KickOut:
		_ = b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.KickOut); err != nil {
			return err
		}
	case *Request_PushMessage:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PushMessage); err != nil {
			return err
		}
	case *Request_GetAuthNode:
		_ = b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetAuthNode); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Gate has unexpected type %T", x)
	}
	// passport
	switch x := m.Passport.(type) {
	case *Request_UserRegister:
		_ = b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserRegister); err != nil {
			return err
		}
	case *Request_UserLogin:
		_ = b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserLogin); err != nil {
			return err
		}
	case *Request_TokenLogin:
		_ = b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokenLogin); err != nil {
			return err
		}
	case *Request_ModifyUserStatus:
		_ = b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModifyUserStatus); err != nil {
			return err
		}
	case *Request_GetUser:
		_ = b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetUser); err != nil {
			return err
		}
	case *Request_UserReset:
		_ = b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserReset); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Passport has unexpected type %T", x)
	}
	// defaultmodule
	switch x := m.Defaultmodule.(type) {
	case *Request_Benchmark:
		_ = b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Benchmark); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Defaultmodule has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 5: // gate.healthCheck
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HealthCheck)
		err := b.DecodeMessage(msg)
		m.Gate = &Request_HealthCheck{msg}
		return true, err
	case 9: // gate.bindService
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BindService)
		err := b.DecodeMessage(msg)
		m.Gate = &Request_BindService{msg}
		return true, err
	case 10: // gate.kickOut
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KickOut)
		err := b.DecodeMessage(msg)
		m.Gate = &Request_KickOut{msg}
		return true, err
	case 11: // gate.pushMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PushMessage)
		err := b.DecodeMessage(msg)
		m.Gate = &Request_PushMessage{msg}
		return true, err
	case 13: // gate.getAuthNode
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetAuthNode)
		err := b.DecodeMessage(msg)
		m.Gate = &Request_GetAuthNode{msg}
		return true, err
	case 20: // passport.userRegister
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserRegister)
		err := b.DecodeMessage(msg)
		m.Passport = &Request_UserRegister{msg}
		return true, err
	case 21: // passport.userLogin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserLogin)
		err := b.DecodeMessage(msg)
		m.Passport = &Request_UserLogin{msg}
		return true, err
	case 22: // passport.tokenLogin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokenLogin)
		err := b.DecodeMessage(msg)
		m.Passport = &Request_TokenLogin{msg}
		return true, err
	case 23: // passport.modifyUserStatus
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ModifyUserStatus)
		err := b.DecodeMessage(msg)
		m.Passport = &Request_ModifyUserStatus{msg}
		return true, err
	case 24: // passport.getUser
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetUser)
		err := b.DecodeMessage(msg)
		m.Passport = &Request_GetUser{msg}
		return true, err
	case 25: // passport.userReset
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserReset)
		err := b.DecodeMessage(msg)
		m.Passport = &Request_UserReset{msg}
		return true, err
	case 30: // defaultmodule.benchmark
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Benchmark)
		err := b.DecodeMessage(msg)
		m.Defaultmodule = &Request_Benchmark{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// gate
	switch x := m.Gate.(type) {
	case *Request_HealthCheck:
		s := proto.Size(x.HealthCheck)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_BindService:
		s := proto.Size(x.BindService)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_KickOut:
		s := proto.Size(x.KickOut)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_PushMessage:
		s := proto.Size(x.PushMessage)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GetAuthNode:
		s := proto.Size(x.GetAuthNode)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// passport
	switch x := m.Passport.(type) {
	case *Request_UserRegister:
		s := proto.Size(x.UserRegister)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_UserLogin:
		s := proto.Size(x.UserLogin)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_TokenLogin:
		s := proto.Size(x.TokenLogin)
		n += proto.SizeVarint(22<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ModifyUserStatus:
		s := proto.Size(x.ModifyUserStatus)
		n += proto.SizeVarint(23<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GetUser:
		s := proto.Size(x.GetUser)
		n += proto.SizeVarint(24<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_UserReset:
		s := proto.Size(x.UserReset)
		n += proto.SizeVarint(25<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// defaultmodule
	switch x := m.Defaultmodule.(type) {
	case *Request_Benchmark:
		s := proto.Size(x.Benchmark)
		n += proto.SizeVarint(30<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// response
type Response struct {
	Session     int32        `protobuf:"varint,1,opt,name=session,proto3" json:"session,omitempty"`
	Code        Code         `protobuf:"varint,2,opt,name=code,proto3,enum=protocol.Code" json:"code,omitempty"`
	CodeMessage *CodeMessage `protobuf:"bytes,3,opt,name=codeMessage" json:"codeMessage,omitempty"`
	// -----------------网关模块响应接口---------------
	//
	// Types that are valid to be assigned to Gate:
	//	*Response_HealthCheckRet
	//	*Response_BindServiceRet
	//	*Response_GetAuthNodeRet
	//	*Response_Kick
	Gate isResponse_Gate `protobuf_oneof:"gate"`
	// Types that are valid to be assigned to Passport:
	//	*Response_UserRegisterRet
	//	*Response_UserLoginRet
	//	*Response_TokenLoginRet
	//	*Response_ModifyUserStatusRet
	//	*Response_GetUserRet
	//	*Response_UserResetRet
	Passport isResponse_Passport `protobuf_oneof:"passport"`
	// Types that are valid to be assigned to Defaultmodule:
	//	*Response_BenchmarkRet
	Defaultmodule isResponse_Defaultmodule `protobuf_oneof:"defaultmodule"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptorProtocol, []int{1} }

type isResponse_Gate interface {
	isResponse_Gate()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isResponse_Passport interface {
	isResponse_Passport()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isResponse_Defaultmodule interface {
	isResponse_Defaultmodule()
	MarshalTo([]byte) (int, error)
	Size() int
}

type Response_HealthCheckRet struct {
	HealthCheckRet *HealthCheckRet `protobuf:"bytes,5,opt,name=healthCheckRet,oneof"`
}
type Response_BindServiceRet struct {
	BindServiceRet *BindServiceRet `protobuf:"bytes,9,opt,name=bindServiceRet,oneof"`
}
type Response_GetAuthNodeRet struct {
	GetAuthNodeRet *GetAuthNodeRet `protobuf:"bytes,13,opt,name=getAuthNodeRet,oneof"`
}
type Response_Kick struct {
	Kick KickType `protobuf:"varint,1005,opt,name=kick,proto3,enum=protocol.KickType,oneof"`
}
type Response_UserRegisterRet struct {
	UserRegisterRet *UserRegisterRet `protobuf:"bytes,20,opt,name=userRegisterRet,oneof"`
}
type Response_UserLoginRet struct {
	UserLoginRet *UserLoginRet `protobuf:"bytes,21,opt,name=userLoginRet,oneof"`
}
type Response_TokenLoginRet struct {
	TokenLoginRet *TokenLoginRet `protobuf:"bytes,22,opt,name=tokenLoginRet,oneof"`
}
type Response_ModifyUserStatusRet struct {
	ModifyUserStatusRet *ModifyUserStatusRet `protobuf:"bytes,23,opt,name=modifyUserStatusRet,oneof"`
}
type Response_GetUserRet struct {
	GetUserRet *GetUserRet `protobuf:"bytes,24,opt,name=getUserRet,oneof"`
}
type Response_UserResetRet struct {
	UserResetRet *UserResetRet `protobuf:"bytes,25,opt,name=userResetRet,oneof"`
}
type Response_BenchmarkRet struct {
	BenchmarkRet *BenchmarkRet `protobuf:"bytes,30,opt,name=benchmarkRet,oneof"`
}

func (*Response_HealthCheckRet) isResponse_Gate()          {}
func (*Response_BindServiceRet) isResponse_Gate()          {}
func (*Response_GetAuthNodeRet) isResponse_Gate()          {}
func (*Response_Kick) isResponse_Gate()                    {}
func (*Response_UserRegisterRet) isResponse_Passport()     {}
func (*Response_UserLoginRet) isResponse_Passport()        {}
func (*Response_TokenLoginRet) isResponse_Passport()       {}
func (*Response_ModifyUserStatusRet) isResponse_Passport() {}
func (*Response_GetUserRet) isResponse_Passport()          {}
func (*Response_UserResetRet) isResponse_Passport()        {}
func (*Response_BenchmarkRet) isResponse_Defaultmodule()   {}

func (m *Response) GetGate() isResponse_Gate {
	if m != nil {
		return m.Gate
	}
	return nil
}
func (m *Response) GetPassport() isResponse_Passport {
	if m != nil {
		return m.Passport
	}
	return nil
}
func (m *Response) GetDefaultmodule() isResponse_Defaultmodule {
	if m != nil {
		return m.Defaultmodule
	}
	return nil
}

func (m *Response) GetSession() int32 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *Response) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *Response) GetCodeMessage() *CodeMessage {
	if m != nil {
		return m.CodeMessage
	}
	return nil
}

func (m *Response) GetHealthCheckRet() *HealthCheckRet {
	if x, ok := m.GetGate().(*Response_HealthCheckRet); ok {
		return x.HealthCheckRet
	}
	return nil
}

func (m *Response) GetBindServiceRet() *BindServiceRet {
	if x, ok := m.GetGate().(*Response_BindServiceRet); ok {
		return x.BindServiceRet
	}
	return nil
}

func (m *Response) GetGetAuthNodeRet() *GetAuthNodeRet {
	if x, ok := m.GetGate().(*Response_GetAuthNodeRet); ok {
		return x.GetAuthNodeRet
	}
	return nil
}

func (m *Response) GetKick() KickType {
	if x, ok := m.GetGate().(*Response_Kick); ok {
		return x.Kick
	}
	return KickType_None
}

func (m *Response) GetUserRegisterRet() *UserRegisterRet {
	if x, ok := m.GetPassport().(*Response_UserRegisterRet); ok {
		return x.UserRegisterRet
	}
	return nil
}

func (m *Response) GetUserLoginRet() *UserLoginRet {
	if x, ok := m.GetPassport().(*Response_UserLoginRet); ok {
		return x.UserLoginRet
	}
	return nil
}

func (m *Response) GetTokenLoginRet() *TokenLoginRet {
	if x, ok := m.GetPassport().(*Response_TokenLoginRet); ok {
		return x.TokenLoginRet
	}
	return nil
}

func (m *Response) GetModifyUserStatusRet() *ModifyUserStatusRet {
	if x, ok := m.GetPassport().(*Response_ModifyUserStatusRet); ok {
		return x.ModifyUserStatusRet
	}
	return nil
}

func (m *Response) GetGetUserRet() *GetUserRet {
	if x, ok := m.GetPassport().(*Response_GetUserRet); ok {
		return x.GetUserRet
	}
	return nil
}

func (m *Response) GetUserResetRet() *UserResetRet {
	if x, ok := m.GetPassport().(*Response_UserResetRet); ok {
		return x.UserResetRet
	}
	return nil
}

func (m *Response) GetBenchmarkRet() *BenchmarkRet {
	if x, ok := m.GetDefaultmodule().(*Response_BenchmarkRet); ok {
		return x.BenchmarkRet
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_HealthCheckRet)(nil),
		(*Response_BindServiceRet)(nil),
		(*Response_GetAuthNodeRet)(nil),
		(*Response_Kick)(nil),
		(*Response_UserRegisterRet)(nil),
		(*Response_UserLoginRet)(nil),
		(*Response_TokenLoginRet)(nil),
		(*Response_ModifyUserStatusRet)(nil),
		(*Response_GetUserRet)(nil),
		(*Response_UserResetRet)(nil),
		(*Response_BenchmarkRet)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// gate
	switch x := m.Gate.(type) {
	case *Response_HealthCheckRet:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HealthCheckRet); err != nil {
			return err
		}
	case *Response_BindServiceRet:
		_ = b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BindServiceRet); err != nil {
			return err
		}
	case *Response_GetAuthNodeRet:
		_ = b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetAuthNodeRet); err != nil {
			return err
		}
	case *Response_Kick:
		_ = b.EncodeVarint(1005<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Kick))
	case nil:
	default:
		return fmt.Errorf("Response.Gate has unexpected type %T", x)
	}
	// passport
	switch x := m.Passport.(type) {
	case *Response_UserRegisterRet:
		_ = b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserRegisterRet); err != nil {
			return err
		}
	case *Response_UserLoginRet:
		_ = b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserLoginRet); err != nil {
			return err
		}
	case *Response_TokenLoginRet:
		_ = b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokenLoginRet); err != nil {
			return err
		}
	case *Response_ModifyUserStatusRet:
		_ = b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModifyUserStatusRet); err != nil {
			return err
		}
	case *Response_GetUserRet:
		_ = b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetUserRet); err != nil {
			return err
		}
	case *Response_UserResetRet:
		_ = b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserResetRet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Passport has unexpected type %T", x)
	}
	// defaultmodule
	switch x := m.Defaultmodule.(type) {
	case *Response_BenchmarkRet:
		_ = b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BenchmarkRet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Defaultmodule has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 5: // gate.healthCheckRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HealthCheckRet)
		err := b.DecodeMessage(msg)
		m.Gate = &Response_HealthCheckRet{msg}
		return true, err
	case 9: // gate.bindServiceRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BindServiceRet)
		err := b.DecodeMessage(msg)
		m.Gate = &Response_BindServiceRet{msg}
		return true, err
	case 13: // gate.getAuthNodeRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetAuthNodeRet)
		err := b.DecodeMessage(msg)
		m.Gate = &Response_GetAuthNodeRet{msg}
		return true, err
	case 1005: // gate.kick
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Gate = &Response_Kick{KickType(x)}
		return true, err
	case 20: // passport.userRegisterRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserRegisterRet)
		err := b.DecodeMessage(msg)
		m.Passport = &Response_UserRegisterRet{msg}
		return true, err
	case 21: // passport.userLoginRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserLoginRet)
		err := b.DecodeMessage(msg)
		m.Passport = &Response_UserLoginRet{msg}
		return true, err
	case 22: // passport.tokenLoginRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokenLoginRet)
		err := b.DecodeMessage(msg)
		m.Passport = &Response_TokenLoginRet{msg}
		return true, err
	case 23: // passport.modifyUserStatusRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ModifyUserStatusRet)
		err := b.DecodeMessage(msg)
		m.Passport = &Response_ModifyUserStatusRet{msg}
		return true, err
	case 24: // passport.getUserRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetUserRet)
		err := b.DecodeMessage(msg)
		m.Passport = &Response_GetUserRet{msg}
		return true, err
	case 25: // passport.userResetRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserResetRet)
		err := b.DecodeMessage(msg)
		m.Passport = &Response_UserResetRet{msg}
		return true, err
	case 30: // defaultmodule.benchmarkRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BenchmarkRet)
		err := b.DecodeMessage(msg)
		m.Defaultmodule = &Response_BenchmarkRet{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// gate
	switch x := m.Gate.(type) {
	case *Response_HealthCheckRet:
		s := proto.Size(x.HealthCheckRet)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_BindServiceRet:
		s := proto.Size(x.BindServiceRet)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GetAuthNodeRet:
		s := proto.Size(x.GetAuthNodeRet)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Kick:
		n += proto.SizeVarint(1005<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Kick))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// passport
	switch x := m.Passport.(type) {
	case *Response_UserRegisterRet:
		s := proto.Size(x.UserRegisterRet)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_UserLoginRet:
		s := proto.Size(x.UserLoginRet)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_TokenLoginRet:
		s := proto.Size(x.TokenLoginRet)
		n += proto.SizeVarint(22<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ModifyUserStatusRet:
		s := proto.Size(x.ModifyUserStatusRet)
		n += proto.SizeVarint(23<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GetUserRet:
		s := proto.Size(x.GetUserRet)
		n += proto.SizeVarint(24<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_UserResetRet:
		s := proto.Size(x.UserResetRet)
		n += proto.SizeVarint(25<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// defaultmodule
	switch x := m.Defaultmodule.(type) {
	case *Response_BenchmarkRet:
		s := proto.Size(x.BenchmarkRet)
		n += proto.SizeVarint(30<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Request)(nil), "protocol.Request")
	proto.RegisterType((*Response)(nil), "protocol.Response")
}
func (m *Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Request) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Session != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.Session))
	}
	if m.Gate != nil {
		nn1, err := m.Gate.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	if m.Passport != nil {
		nn2, err := m.Passport.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn2
	}
	if m.Defaultmodule != nil {
		nn3, err := m.Defaultmodule.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn3
	}
	return i, nil
}

func (m *Request_HealthCheck) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.HealthCheck != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.HealthCheck.Size()))
		n4, err := m.HealthCheck.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	return i, nil
}
func (m *Request_BindService) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.BindService != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.BindService.Size()))
		n5, err := m.BindService.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}
func (m *Request_KickOut) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.KickOut != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.KickOut.Size()))
		n6, err := m.KickOut.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	return i, nil
}
func (m *Request_PushMessage) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.PushMessage != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.PushMessage.Size()))
		n7, err := m.PushMessage.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}
func (m *Request_GetAuthNode) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GetAuthNode != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GetAuthNode.Size()))
		n8, err := m.GetAuthNode.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	return i, nil
}
func (m *Request_UserRegister) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UserRegister != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.UserRegister.Size()))
		n9, err := m.UserRegister.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	return i, nil
}
func (m *Request_UserLogin) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UserLogin != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.UserLogin.Size()))
		n10, err := m.UserLogin.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	return i, nil
}
func (m *Request_TokenLogin) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.TokenLogin != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.TokenLogin.Size()))
		n11, err := m.TokenLogin.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	return i, nil
}
func (m *Request_ModifyUserStatus) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ModifyUserStatus != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.ModifyUserStatus.Size()))
		n12, err := m.ModifyUserStatus.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	return i, nil
}
func (m *Request_GetUser) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GetUser != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GetUser.Size()))
		n13, err := m.GetUser.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	return i, nil
}
func (m *Request_UserReset) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UserReset != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.UserReset.Size()))
		n14, err := m.UserReset.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n14
	}
	return i, nil
}
func (m *Request_Benchmark) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Benchmark != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.Benchmark.Size()))
		n15, err := m.Benchmark.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n15
	}
	return i, nil
}
func (m *Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Response) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Session != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.Session))
	}
	if m.Code != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.Code))
	}
	if m.CodeMessage != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.CodeMessage.Size()))
		n16, err := m.CodeMessage.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n16
	}
	if m.Gate != nil {
		nn17, err := m.Gate.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn17
	}
	if m.Passport != nil {
		nn18, err := m.Passport.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn18
	}
	if m.Defaultmodule != nil {
		nn19, err := m.Defaultmodule.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn19
	}
	return i, nil
}

func (m *Response_HealthCheckRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.HealthCheckRet != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.HealthCheckRet.Size()))
		n20, err := m.HealthCheckRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n20
	}
	return i, nil
}
func (m *Response_BindServiceRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.BindServiceRet != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.BindServiceRet.Size()))
		n21, err := m.BindServiceRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n21
	}
	return i, nil
}
func (m *Response_GetAuthNodeRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GetAuthNodeRet != nil {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GetAuthNodeRet.Size()))
		n22, err := m.GetAuthNodeRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n22
	}
	return i, nil
}
func (m *Response_UserRegisterRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UserRegisterRet != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.UserRegisterRet.Size()))
		n23, err := m.UserRegisterRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n23
	}
	return i, nil
}
func (m *Response_UserLoginRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UserLoginRet != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.UserLoginRet.Size()))
		n24, err := m.UserLoginRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n24
	}
	return i, nil
}
func (m *Response_TokenLoginRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.TokenLoginRet != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.TokenLoginRet.Size()))
		n25, err := m.TokenLoginRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n25
	}
	return i, nil
}
func (m *Response_ModifyUserStatusRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ModifyUserStatusRet != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.ModifyUserStatusRet.Size()))
		n26, err := m.ModifyUserStatusRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n26
	}
	return i, nil
}
func (m *Response_GetUserRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GetUserRet != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GetUserRet.Size()))
		n27, err := m.GetUserRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n27
	}
	return i, nil
}
func (m *Response_UserResetRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UserResetRet != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.UserResetRet.Size()))
		n28, err := m.UserResetRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n28
	}
	return i, nil
}
func (m *Response_BenchmarkRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.BenchmarkRet != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.BenchmarkRet.Size()))
		n29, err := m.BenchmarkRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n29
	}
	return i, nil
}
func (m *Response_Kick) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe8
	i++
	dAtA[i] = 0x3e
	i++
	i = encodeVarintProtocol(dAtA, i, uint64(m.Kick))
	return i, nil
}
func encodeVarintProtocol(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Request) Size() (n int) {
	var l int
	_ = l
	if m.Session != 0 {
		n += 1 + sovProtocol(uint64(m.Session))
	}
	if m.Gate != nil {
		n += m.Gate.Size()
	}
	if m.Passport != nil {
		n += m.Passport.Size()
	}
	if m.Defaultmodule != nil {
		n += m.Defaultmodule.Size()
	}
	return n
}

func (m *Request_HealthCheck) Size() (n int) {
	var l int
	_ = l
	if m.HealthCheck != nil {
		l = m.HealthCheck.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_BindService) Size() (n int) {
	var l int
	_ = l
	if m.BindService != nil {
		l = m.BindService.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_KickOut) Size() (n int) {
	var l int
	_ = l
	if m.KickOut != nil {
		l = m.KickOut.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_PushMessage) Size() (n int) {
	var l int
	_ = l
	if m.PushMessage != nil {
		l = m.PushMessage.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_GetAuthNode) Size() (n int) {
	var l int
	_ = l
	if m.GetAuthNode != nil {
		l = m.GetAuthNode.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_UserRegister) Size() (n int) {
	var l int
	_ = l
	if m.UserRegister != nil {
		l = m.UserRegister.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_UserLogin) Size() (n int) {
	var l int
	_ = l
	if m.UserLogin != nil {
		l = m.UserLogin.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_TokenLogin) Size() (n int) {
	var l int
	_ = l
	if m.TokenLogin != nil {
		l = m.TokenLogin.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_ModifyUserStatus) Size() (n int) {
	var l int
	_ = l
	if m.ModifyUserStatus != nil {
		l = m.ModifyUserStatus.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_GetUser) Size() (n int) {
	var l int
	_ = l
	if m.GetUser != nil {
		l = m.GetUser.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_UserReset) Size() (n int) {
	var l int
	_ = l
	if m.UserReset != nil {
		l = m.UserReset.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_Benchmark) Size() (n int) {
	var l int
	_ = l
	if m.Benchmark != nil {
		l = m.Benchmark.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response) Size() (n int) {
	var l int
	_ = l
	if m.Session != 0 {
		n += 1 + sovProtocol(uint64(m.Session))
	}
	if m.Code != 0 {
		n += 1 + sovProtocol(uint64(m.Code))
	}
	if m.CodeMessage != nil {
		l = m.CodeMessage.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	if m.Gate != nil {
		n += m.Gate.Size()
	}
	if m.Passport != nil {
		n += m.Passport.Size()
	}
	if m.Defaultmodule != nil {
		n += m.Defaultmodule.Size()
	}
	return n
}

func (m *Response_HealthCheckRet) Size() (n int) {
	var l int
	_ = l
	if m.HealthCheckRet != nil {
		l = m.HealthCheckRet.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_BindServiceRet) Size() (n int) {
	var l int
	_ = l
	if m.BindServiceRet != nil {
		l = m.BindServiceRet.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_GetAuthNodeRet) Size() (n int) {
	var l int
	_ = l
	if m.GetAuthNodeRet != nil {
		l = m.GetAuthNodeRet.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_UserRegisterRet) Size() (n int) {
	var l int
	_ = l
	if m.UserRegisterRet != nil {
		l = m.UserRegisterRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_UserLoginRet) Size() (n int) {
	var l int
	_ = l
	if m.UserLoginRet != nil {
		l = m.UserLoginRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_TokenLoginRet) Size() (n int) {
	var l int
	_ = l
	if m.TokenLoginRet != nil {
		l = m.TokenLoginRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_ModifyUserStatusRet) Size() (n int) {
	var l int
	_ = l
	if m.ModifyUserStatusRet != nil {
		l = m.ModifyUserStatusRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_GetUserRet) Size() (n int) {
	var l int
	_ = l
	if m.GetUserRet != nil {
		l = m.GetUserRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_UserResetRet) Size() (n int) {
	var l int
	_ = l
	if m.UserResetRet != nil {
		l = m.UserResetRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_BenchmarkRet) Size() (n int) {
	var l int
	_ = l
	if m.BenchmarkRet != nil {
		l = m.BenchmarkRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_Kick) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovProtocol(uint64(m.Kick))
	return n
}

func sovProtocol(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozProtocol(x uint64) (n int) {
	return sovProtocol(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Session", wireType)
			}
			m.Session = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Session |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HealthCheck", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HealthCheck{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Request_HealthCheck{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BindService", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &BindService{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Request_BindService{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KickOut", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &KickOut{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Request_KickOut{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PushMessage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Request_PushMessage{v}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetAuthNode", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GetAuthNode{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Request_GetAuthNode{v}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserRegister", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UserRegister{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Request_UserRegister{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserLogin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UserLogin{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Request_UserLogin{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenLogin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TokenLogin{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Request_TokenLogin{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModifyUserStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModifyUserStatus{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Request_ModifyUserStatus{v}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetUser", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GetUser{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Request_GetUser{v}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserReset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UserReset{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Request_UserReset{v}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Benchmark", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Benchmark{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Defaultmodule = &Request_Benchmark{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProtocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Response) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Session", wireType)
			}
			m.Session = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Session |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= (Code(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CodeMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CodeMessage == nil {
				m.CodeMessage = &CodeMessage{}
			}
			if err := m.CodeMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HealthCheckRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HealthCheckRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Response_HealthCheckRet{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BindServiceRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &BindServiceRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Response_BindServiceRet{v}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetAuthNodeRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GetAuthNodeRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Response_GetAuthNodeRet{v}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserRegisterRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UserRegisterRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Response_UserRegisterRet{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserLoginRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UserLoginRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Response_UserLoginRet{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenLoginRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TokenLoginRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Response_TokenLoginRet{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModifyUserStatusRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModifyUserStatusRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Response_ModifyUserStatusRet{v}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetUserRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GetUserRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Response_GetUserRet{v}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserResetRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UserResetRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Response_UserResetRet{v}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BenchmarkRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &BenchmarkRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Defaultmodule = &Response_BenchmarkRet{v}
			iNdEx = postIndex
		case 1005:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kick", wireType)
			}
			var v KickType
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (KickType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Gate = &Response_Kick{v}
		default:
			iNdEx = preIndex
			skippy, err := skipProtocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProtocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProtocol(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProtocol
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthProtocol
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowProtocol
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipProtocol(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthProtocol = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProtocol   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("protocol.proto", fileDescriptorProtocol) }

var fileDescriptorProtocol = []byte{
	// 666 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0xe7, 0xb1, 0xad, 0x9b, 0xbb, 0x76, 0xc3, 0xfb, 0xe7, 0x55, 0x5a, 0x35, 0xed, 0x34,
	0x0e, 0xec, 0xb0, 0x49, 0x20, 0x24, 0x24, 0x44, 0x27, 0xa4, 0x48, 0xfc, 0x13, 0x1e, 0x9c, 0x51,
	0x96, 0xbc, 0x6b, 0xa3, 0xb6, 0x71, 0x89, 0x1d, 0xa4, 0x7d, 0x43, 0x8e, 0x7c, 0x04, 0xb4, 0x23,
	0x12, 0x07, 0xbe, 0x01, 0x7a, 0x9d, 0xba, 0x76, 0xbc, 0x80, 0x38, 0x6d, 0x6f, 0x9e, 0xe7, 0xf7,
	0x58, 0x6e, 0xde, 0x27, 0xb4, 0x3b, 0x2b, 0xa4, 0x96, 0x89, 0x9c, 0x9c, 0x99, 0x7f, 0xd8, 0xba,
	0x9d, 0x7b, 0xdb, 0x05, 0xa8, 0x72, 0xa2, 0x13, 0x99, 0x42, 0xa5, 0xf5, 0xb6, 0x87, 0xb1, 0x86,
	0xcf, 0x53, 0x99, 0xc2, 0xdc, 0xdd, 0xdb, 0x35, 0x4f, 0xb2, 0x5c, 0x43, 0x71, 0x13, 0x27, 0xd6,
	0xc7, 0x67, 0xb1, 0x52, 0x33, 0x59, 0xe8, 0x7b, 0xca, 0x51, 0x0a, 0x37, 0x71, 0x39, 0xd1, 0x53,
	0x99, 0x96, 0x93, 0x7b, 0xe0, 0xc9, 0xef, 0x55, 0xda, 0x12, 0xf0, 0xa5, 0x04, 0xa5, 0x19, 0xa7,
	0x2d, 0x05, 0x4a, 0x65, 0x32, 0xe7, 0xe4, 0x98, 0x9c, 0xae, 0x0a, 0x3b, 0xb2, 0x67, 0xb4, 0x3d,
	0x82, 0x78, 0xa2, 0x47, 0x97, 0x23, 0x48, 0xc6, 0x7c, 0xf5, 0x98, 0x9c, 0xb6, 0xcf, 0xf7, 0xce,
	0x16, 0x17, 0xf1, 0xc4, 0x68, 0x49, 0xf8, 0x5e, 0x44, 0xaf, 0xb3, 0x3c, 0xbd, 0x82, 0xe2, 0x6b,
	0x96, 0x00, 0xdf, 0x08, 0x51, 0x4f, 0x44, 0xd4, 0x1b, 0xd9, 0x63, 0xda, 0x1a, 0x67, 0xc9, 0xf8,
	0x7d, 0xa9, 0x39, 0x35, 0xd8, 0x43, 0x87, 0xcd, 0x85, 0x68, 0x49, 0x58, 0x0f, 0x9e, 0x34, 0x2b,
	0xd5, 0xe8, 0x2d, 0x28, 0x15, 0x0f, 0x81, 0xb7, 0xc3, 0x93, 0x3c, 0x11, 0x4f, 0xf2, 0x46, 0x44,
	0x87, 0xa0, 0x5f, 0x96, 0x7a, 0xf4, 0x4e, 0xa6, 0xc0, 0x3b, 0x21, 0xea, 0x89, 0x88, 0x7a, 0x23,
	0x7b, 0x4e, 0x37, 0x4b, 0x05, 0x85, 0x80, 0x61, 0xa6, 0x34, 0x14, 0x7c, 0xd7, 0xb0, 0xfb, 0x8e,
	0xf5, 0xd5, 0x88, 0x88, 0x9a, 0x9b, 0x5d, 0xd0, 0x0d, 0x9c, 0xdf, 0xc8, 0x61, 0x96, 0xf3, 0x3d,
	0x83, 0xee, 0xd4, 0x51, 0x23, 0x45, 0x44, 0x38, 0x1f, 0x7b, 0x42, 0xa9, 0x96, 0x63, 0xc8, 0x2b,
	0x6a, 0xdf, 0x50, 0xbb, 0x8e, 0x72, 0x5a, 0x44, 0x84, 0xe7, 0x64, 0x11, 0xdd, 0x9e, 0xca, 0x34,
	0xbb, 0xb9, 0xfd, 0xa4, 0xa0, 0xb8, 0xd2, 0xb1, 0x2e, 0x15, 0x3f, 0x30, 0x74, 0xcf, 0xd1, 0xa1,
	0x23, 0x22, 0xe2, 0x1e, 0x85, 0x6f, 0x66, 0x08, 0x1a, 0x1f, 0x70, 0x1e, 0xbe, 0x99, 0xb9, 0x10,
	0x11, 0x61, 0x3d, 0xf6, 0x96, 0x02, 0x14, 0x68, 0x7e, 0xd8, 0x74, 0x4b, 0x23, 0xd9, 0x5b, 0x9a,
	0x01, 0xa1, 0x6b, 0xc8, 0x93, 0xd1, 0x34, 0x2e, 0xc6, 0xbc, 0x1f, 0x42, 0x0b, 0x29, 0x5a, 0x16,
	0xce, 0x37, 0x58, 0xa3, 0x2b, 0xd8, 0x8f, 0x01, 0xa5, 0xeb, 0xb6, 0x11, 0x83, 0x2d, 0xda, 0xa9,
	0x75, 0xe0, 0xe4, 0xe7, 0x1a, 0x5d, 0x17, 0xa0, 0x66, 0x32, 0x57, 0xf0, 0x8f, 0xa5, 0x3f, 0xa1,
	0x2b, 0xd8, 0x44, 0xbe, 0x7c, 0x4c, 0x4e, 0xbb, 0xe7, 0x5d, 0x77, 0xf6, 0xa5, 0x4c, 0x41, 0x18,
	0x8d, 0x3d, 0xa5, 0x6d, 0xfc, 0x6b, 0x77, 0xee, 0x41, 0xb8, 0x38, 0x97, 0x4e, 0x14, 0xbe, 0x93,
	0x0d, 0x68, 0xd7, 0x6b, 0x89, 0x00, 0x3d, 0x2f, 0x15, 0x6f, 0x2c, 0x95, 0x00, 0xdc, 0xf4, 0x80,
	0xc0, 0x0c, 0xaf, 0x2e, 0x98, 0xb1, 0x11, 0x66, 0xd4, 0x75, 0xcc, 0xa8, 0x3f, 0xc1, 0x0c, 0x6f,
	0x9b, 0x31, 0xa3, 0x13, 0x66, 0xd4, 0x75, 0xcc, 0xa8, 0x3f, 0x61, 0xaf, 0xe8, 0x96, 0xbf, 0xd4,
	0x18, 0x52, 0xb5, 0xe0, 0xb0, 0xb9, 0x05, 0xc2, 0xbc, 0xea, 0x90, 0xb1, 0x4d, 0x32, 0xbb, 0x8a,
	0x19, 0x7b, 0x4d, 0x4d, 0xb2, 0xaa, 0x6d, 0x92, 0x9d, 0xd9, 0x0b, 0xda, 0x71, 0xab, 0x8e, 0x78,
	0xd5, 0x8b, 0x83, 0xa6, 0x5e, 0x54, 0x7c, 0xdd, 0xcf, 0x3e, 0xd0, 0x9d, 0x70, 0xcf, 0x31, 0xa6,
	0x2a, 0xc8, 0xd1, 0xdf, 0x0b, 0x52, 0x85, 0x35, 0xb1, 0x58, 0xd4, 0x79, 0x05, 0x30, 0x89, 0x87,
	0x45, 0x75, 0x1a, 0x16, 0xd5, 0x4d, 0xee, 0x9b, 0xa2, 0x40, 0x8b, 0x45, 0x65, 0xf6, 0x1b, 0x2a,
	0xe3, 0xfd, 0x12, 0x76, 0x46, 0x7a, 0x51, 0x08, 0xa4, 0xfb, 0x21, 0xed, 0xab, 0xd1, 0xb2, 0xa8,
	0xb9, 0xd9, 0x23, 0xba, 0x82, 0x1f, 0x54, 0xfe, 0xab, 0x65, 0xd6, 0x9e, 0x39, 0xec, 0x75, 0x96,
	0x8c, 0x3f, 0xde, 0xce, 0xf0, 0x0b, 0x68, 0x2c, 0xff, 0x55, 0xb6, 0xc1, 0xe6, 0xb7, 0xbb, 0x3e,
	0xf9, 0x7e, 0xd7, 0x27, 0x3f, 0xee, 0xfa, 0xe4, 0x7a, 0xcd, 0xa4, 0x5d, 0xfc, 0x09, 0x00, 0x00,
	0xff, 0xff, 0x41, 0xc7, 0x06, 0x57, 0x04, 0x07, 0x00, 0x00,
}
